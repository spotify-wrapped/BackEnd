<div class="content-container">
    <h1 class='top-title'>Your Top Songs</h1>
    <p class='top-description'>
        Click on an album image to stream/pause a song<br>
        Click "Create Playlist" to create this as a playlist on your Spotify Account
    </p>
    <div class='list-container'>
        <div id='songs-list'></div>
    </div>  
    <button class='playlist-button' onClick="createPlaylist()">Create Playlist</button>
</div>


<script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>

<!-- Main -->
<script>
    const accessToken = sessionStorage.getItem('accessToken');
    $( document ).ready(async function(){
        try {
            const { items: topTracks } = await $.post(window.location.origin + '/top', { accessToken });
            displayTracks(topTracks); 
        }catch(err) {
            console.log(err);
            $("#main").append('<div>Please refresh page</div>');
        }
    });
</script>

<!-- Script for displaying top tracks list -->
<script>
    function displayTracks(topTracks){
        topTracks.forEach(track => {
            const { album, artists, id, name, uri } = track;
            const { name: albumName } = album;

            const albumArt = album.images[1];

            $("#songs-list").append('<div class="song-entry" id='+id+' uri='+uri+'></div>');
            $(`#${id}`).append('<div class=album-section></div>');
            $(`#${id} .album-section`).append(`<img class="album-image" src=${albumArt.url} width=100%/>`);
            $(`#${id} .album-section`).append('<div class="play-button"><p class="play-icon">&#9654;</p></div>');
            $(`#${id}`).append('<p class="song-text">'+name+' - '+artists[0].name+'</p>');
        });
    }
</script>

<!-- Script for create playlist button/playlist creation result -->
<script>
    let playlistCreated = false;
    function createPlaylist(){
        if(!playlistCreated){
            $.post(
                window.location.origin + '/createPlaylist',
                {
                    accessToken
                },
                (data, status) => {
                    console.log(`Playlist Created! Data: ${data}, Status: ${status}`);
                }
            );
            $('.content-container').append('<p class="top-description">A Playlist has been created on your Spotify account under "Spotify Project Top Playlist" If you are using the Spotify application, it might take a moment to load. The Spotify Web Player Site has quicker results.</p>');
            playlistCreated = true;
        }
    }
</script>

<!-- Script for initializing Web Player functionality -->
<script src="https://sdk.scdn.co/spotify-player.js"></script>
<script>
    let isPlaying = false;
    let isPaused = false;
    let currSong = null;
    window.onSpotifyWebPlaybackSDKReady = () => {
        const token = sessionStorage.getItem('accessToken');
        const player = new Spotify.Player({
            name: 'Web Playback SDK Top Tracks Player',
            getOAuthToken: cb => { cb(token); }
        });
        // Ready
        player.addListener('ready', ({ device_id }) => {
            console.log('Ready with Device ID', device_id);

            let songEntries = $('#songs-list').children();
            for(song of songEntries){
                addPlayListener(token, device_id, song);
            }
        });
        // Not Ready
        player.addListener('not_ready', ({ device_id }) => {
            console.log('Device ID has gone offline', device_id);
        });
        // Connect to the player!
        player.connect();
    }

    function addPlayListener(token, device_id, song){
        let id = $(song).attr('id');
        let albumSection = $(song).children('.album-section');
        let uri = $(song).attr('uri');
        $(albumSection).on('click', async function(){
            if(isPlaying){ // Music is playing
                if(id == currSong){ // User wanted to pause song
                    pauseUri(token, device_id, uri);
                    $(`#${currSong} .play-button p`).html('&#9646;&#9646;');
                    isPlaying = false;
                    isPaused = true;
                } else { // User wanted to play entirely new song
                    $(`#${currSong} .play-button`).css('display', 'none');
                    playUri(token, device_id, uri);
                    currSong = id;
                    $(`#${id} .play-button`).css('display', 'block');
                }  
            } else { // Nothing is playing 
                if(isPaused){ // Song is paused, either play new song, or resume old song
                    if(id == currSong){ // User wanted to resume song that was playing
                        let playbackData = await getPlaybackData(token);
                        playUri(token, device_id, uri, playbackData.progress_ms);
                        $(`#${id} .play-button p`).html('&#9654;');
                    } else { // User wanted to play new song while another is paused
                        $(`#${currSong} .play-button p`).html('&#9654;');
                        $(`#${currSong} .play-button`).css('display', 'none');
                        currSong = id;
                        playUri(token, device_id, uri);
                        $(`#${id} .play-button`).css('display', 'block');
                    }
                    isPaused = false;
                } else { // No song is paused, and nothing is playing, play an entirely new track!
                    currSong = id;
                    playUri(token, device_id, uri);
                    $(`#${id} .play-button`).css('display', 'block');
                }
                isPlaying = true;
            }
        });
    }

    function playUri(accessToken, deviceId, uri, timestamp){
        $.post(
            window.location.origin + '/playUri',
            {
                accessToken,
                deviceId,
                uri,
                timestamp
            }
        );
    }

    function pauseUri(accessToken, deviceId, uri){
        $.post(
            window.location.origin + '/pauseUri',
            {
                accessToken,
                deviceId,
                uri
            }
        );
    }

    async function getPlaybackData(accessToken){
        return await $.post(
            window.location.origin + '/getPlaybackData',
            {
                accessToken
            }
        );
    }
</script>